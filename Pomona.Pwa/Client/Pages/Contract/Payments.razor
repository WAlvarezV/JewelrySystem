<h4>Abonos</h4>
<EditForm Model="@NewPaymenValue" OnValidSubmit="RegisterPayment">
    <div class="table-responsive">
        <table class="table table-sm table-bordered table-striped">
            <thead>
                <tr>
                    <th>Fecha de Abono</th>
                    <th>Valor</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in PaymentsList)
                {
                    <tr>
                        <td>@item.Date.ToDateTime().ToString("dd-MMMM-yyyy")</td>
                        <td>@item.Value.ToString("C0", CultureInfo)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
    <div class="form-row">
        <div class="form-group col-md-4">
            <label for="number">Nuevo Abono</label>
            <input type="number" class="form-control" min="1" @bind-value="NewPaymenValue" />
        </div>
        <div class="form-group col-md-2">
            <label class="label-white" for="search">Btn</label>
            <button type="submit" class="btn btn-primary btn-block">Abonar</button>
        </div>
    </div>
</EditForm>
@code {
    [Parameter] public IEnumerable<PaymentProto> PaymentsList { get; set; } = Enumerable.Empty<PaymentProto>();
    [Parameter] public EventCallback<int> OnValidSubmit { get; set; }
    [Parameter] public int NewPaymenValue { get; set; }
    [Parameter] public CultureInfo CultureInfo { get; set; }

    public async Task RegisterPayment()
    {
        await OnValidSubmit.InvokeAsync(NewPaymenValue);
    }
}


